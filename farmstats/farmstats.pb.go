// Code generated by protoc-gen-go. DO NOT EDIT.
// source: farmstats.proto

package farmstats

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FarmID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FarmID) Reset()         { *m = FarmID{} }
func (m *FarmID) String() string { return proto.CompactTextString(m) }
func (*FarmID) ProtoMessage()    {}
func (*FarmID) Descriptor() ([]byte, []int) {
	return fileDescriptor_farmstats_34e76d747185e903, []int{0}
}
func (m *FarmID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FarmID.Unmarshal(m, b)
}
func (m *FarmID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FarmID.Marshal(b, m, deterministic)
}
func (dst *FarmID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FarmID.Merge(dst, src)
}
func (m *FarmID) XXX_Size() int {
	return xxx_messageInfo_FarmID.Size(m)
}
func (m *FarmID) XXX_DiscardUnknown() {
	xxx_messageInfo_FarmID.DiscardUnknown(m)
}

var xxx_messageInfo_FarmID proto.InternalMessageInfo

func (m *FarmID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Farm struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Abigail              uint32   `protobuf:"varint,2,opt,name=abigail" json:"abigail,omitempty"`
	Alex                 uint32   `protobuf:"varint,3,opt,name=alex" json:"alex,omitempty"`
	Caroline             uint32   `protobuf:"varint,4,opt,name=caroline" json:"caroline,omitempty"`
	Clint                uint32   `protobuf:"varint,5,opt,name=clint" json:"clint,omitempty"`
	Demetrius            uint32   `protobuf:"varint,6,opt,name=demetrius" json:"demetrius,omitempty"`
	Dwarf                uint32   `protobuf:"varint,7,opt,name=dwarf" json:"dwarf,omitempty"`
	Elliott              uint32   `protobuf:"varint,8,opt,name=elliott" json:"elliott,omitempty"`
	Emily                uint32   `protobuf:"varint,9,opt,name=emily" json:"emily,omitempty"`
	Evelyn               uint32   `protobuf:"varint,10,opt,name=evelyn" json:"evelyn,omitempty"`
	George               uint32   `protobuf:"varint,11,opt,name=george" json:"george,omitempty"`
	Gus                  uint32   `protobuf:"varint,12,opt,name=gus" json:"gus,omitempty"`
	Haley                uint32   `protobuf:"varint,13,opt,name=haley" json:"haley,omitempty"`
	Harvey               uint32   `protobuf:"varint,14,opt,name=harvey" json:"harvey,omitempty"`
	Henchman             uint32   `protobuf:"varint,15,opt,name=henchman" json:"henchman,omitempty"`
	Jas                  uint32   `protobuf:"varint,16,opt,name=jas" json:"jas,omitempty"`
	Jodi                 uint32   `protobuf:"varint,17,opt,name=jodi" json:"jodi,omitempty"`
	Kent                 uint32   `protobuf:"varint,18,opt,name=kent" json:"kent,omitempty"`
	Krobus               uint32   `protobuf:"varint,19,opt,name=krobus" json:"krobus,omitempty"`
	Leah                 uint32   `protobuf:"varint,20,opt,name=leah" json:"leah,omitempty"`
	Lewis                uint32   `protobuf:"varint,21,opt,name=lewis" json:"lewis,omitempty"`
	Linus                uint32   `protobuf:"varint,22,opt,name=linus" json:"linus,omitempty"`
	Marnie               uint32   `protobuf:"varint,23,opt,name=marnie" json:"marnie,omitempty"`
	Maru                 uint32   `protobuf:"varint,24,opt,name=maru" json:"maru,omitempty"`
	Pam                  uint32   `protobuf:"varint,25,opt,name=pam" json:"pam,omitempty"`
	Penny                uint32   `protobuf:"varint,26,opt,name=penny" json:"penny,omitempty"`
	Pierre               uint32   `protobuf:"varint,27,opt,name=pierre" json:"pierre,omitempty"`
	Robin                uint32   `protobuf:"varint,28,opt,name=robin" json:"robin,omitempty"`
	Sam                  uint32   `protobuf:"varint,29,opt,name=sam" json:"sam,omitempty"`
	Sandy                uint32   `protobuf:"varint,30,opt,name=sandy" json:"sandy,omitempty"`
	Sebastian            uint32   `protobuf:"varint,31,opt,name=sebastian" json:"sebastian,omitempty"`
	Shane                uint32   `protobuf:"varint,32,opt,name=shane" json:"shane,omitempty"`
	Vincent              uint32   `protobuf:"varint,33,opt,name=vincent" json:"vincent,omitempty"`
	Willy                uint32   `protobuf:"varint,34,opt,name=willy" json:"willy,omitempty"`
	Wizard               uint32   `protobuf:"varint,35,opt,name=wizard" json:"wizard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Farm) Reset()         { *m = Farm{} }
func (m *Farm) String() string { return proto.CompactTextString(m) }
func (*Farm) ProtoMessage()    {}
func (*Farm) Descriptor() ([]byte, []int) {
	return fileDescriptor_farmstats_34e76d747185e903, []int{1}
}
func (m *Farm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Farm.Unmarshal(m, b)
}
func (m *Farm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Farm.Marshal(b, m, deterministic)
}
func (dst *Farm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Farm.Merge(dst, src)
}
func (m *Farm) XXX_Size() int {
	return xxx_messageInfo_Farm.Size(m)
}
func (m *Farm) XXX_DiscardUnknown() {
	xxx_messageInfo_Farm.DiscardUnknown(m)
}

var xxx_messageInfo_Farm proto.InternalMessageInfo

func (m *Farm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Farm) GetAbigail() uint32 {
	if m != nil {
		return m.Abigail
	}
	return 0
}

func (m *Farm) GetAlex() uint32 {
	if m != nil {
		return m.Alex
	}
	return 0
}

func (m *Farm) GetCaroline() uint32 {
	if m != nil {
		return m.Caroline
	}
	return 0
}

func (m *Farm) GetClint() uint32 {
	if m != nil {
		return m.Clint
	}
	return 0
}

func (m *Farm) GetDemetrius() uint32 {
	if m != nil {
		return m.Demetrius
	}
	return 0
}

func (m *Farm) GetDwarf() uint32 {
	if m != nil {
		return m.Dwarf
	}
	return 0
}

func (m *Farm) GetElliott() uint32 {
	if m != nil {
		return m.Elliott
	}
	return 0
}

func (m *Farm) GetEmily() uint32 {
	if m != nil {
		return m.Emily
	}
	return 0
}

func (m *Farm) GetEvelyn() uint32 {
	if m != nil {
		return m.Evelyn
	}
	return 0
}

func (m *Farm) GetGeorge() uint32 {
	if m != nil {
		return m.George
	}
	return 0
}

func (m *Farm) GetGus() uint32 {
	if m != nil {
		return m.Gus
	}
	return 0
}

func (m *Farm) GetHaley() uint32 {
	if m != nil {
		return m.Haley
	}
	return 0
}

func (m *Farm) GetHarvey() uint32 {
	if m != nil {
		return m.Harvey
	}
	return 0
}

func (m *Farm) GetHenchman() uint32 {
	if m != nil {
		return m.Henchman
	}
	return 0
}

func (m *Farm) GetJas() uint32 {
	if m != nil {
		return m.Jas
	}
	return 0
}

func (m *Farm) GetJodi() uint32 {
	if m != nil {
		return m.Jodi
	}
	return 0
}

func (m *Farm) GetKent() uint32 {
	if m != nil {
		return m.Kent
	}
	return 0
}

func (m *Farm) GetKrobus() uint32 {
	if m != nil {
		return m.Krobus
	}
	return 0
}

func (m *Farm) GetLeah() uint32 {
	if m != nil {
		return m.Leah
	}
	return 0
}

func (m *Farm) GetLewis() uint32 {
	if m != nil {
		return m.Lewis
	}
	return 0
}

func (m *Farm) GetLinus() uint32 {
	if m != nil {
		return m.Linus
	}
	return 0
}

func (m *Farm) GetMarnie() uint32 {
	if m != nil {
		return m.Marnie
	}
	return 0
}

func (m *Farm) GetMaru() uint32 {
	if m != nil {
		return m.Maru
	}
	return 0
}

func (m *Farm) GetPam() uint32 {
	if m != nil {
		return m.Pam
	}
	return 0
}

func (m *Farm) GetPenny() uint32 {
	if m != nil {
		return m.Penny
	}
	return 0
}

func (m *Farm) GetPierre() uint32 {
	if m != nil {
		return m.Pierre
	}
	return 0
}

func (m *Farm) GetRobin() uint32 {
	if m != nil {
		return m.Robin
	}
	return 0
}

func (m *Farm) GetSam() uint32 {
	if m != nil {
		return m.Sam
	}
	return 0
}

func (m *Farm) GetSandy() uint32 {
	if m != nil {
		return m.Sandy
	}
	return 0
}

func (m *Farm) GetSebastian() uint32 {
	if m != nil {
		return m.Sebastian
	}
	return 0
}

func (m *Farm) GetShane() uint32 {
	if m != nil {
		return m.Shane
	}
	return 0
}

func (m *Farm) GetVincent() uint32 {
	if m != nil {
		return m.Vincent
	}
	return 0
}

func (m *Farm) GetWilly() uint32 {
	if m != nil {
		return m.Willy
	}
	return 0
}

func (m *Farm) GetWizard() uint32 {
	if m != nil {
		return m.Wizard
	}
	return 0
}

func init() {
	proto.RegisterType((*FarmID)(nil), "farmstats.FarmID")
	proto.RegisterType((*Farm)(nil), "farmstats.Farm")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FarmStatsClient is the client API for FarmStats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FarmStatsClient interface {
	// Get the stats for a given farm
	GetStats(ctx context.Context, in *FarmID, opts ...grpc.CallOption) (*Farm, error)
}

type farmStatsClient struct {
	cc *grpc.ClientConn
}

func NewFarmStatsClient(cc *grpc.ClientConn) FarmStatsClient {
	return &farmStatsClient{cc}
}

func (c *farmStatsClient) GetStats(ctx context.Context, in *FarmID, opts ...grpc.CallOption) (*Farm, error) {
	out := new(Farm)
	err := c.cc.Invoke(ctx, "/farmstats.FarmStats/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FarmStats service

type FarmStatsServer interface {
	// Get the stats for a given farm
	GetStats(context.Context, *FarmID) (*Farm, error)
}

func RegisterFarmStatsServer(s *grpc.Server, srv FarmStatsServer) {
	s.RegisterService(&_FarmStats_serviceDesc, srv)
}

func _FarmStats_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FarmID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FarmStatsServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/farmstats.FarmStats/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FarmStatsServer).GetStats(ctx, req.(*FarmID))
	}
	return interceptor(ctx, in, info, handler)
}

var _FarmStats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "farmstats.FarmStats",
	HandlerType: (*FarmStatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStats",
			Handler:    _FarmStats_GetStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "farmstats.proto",
}

func init() { proto.RegisterFile("farmstats.proto", fileDescriptor_farmstats_34e76d747185e903) }

var fileDescriptor_farmstats_34e76d747185e903 = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x93, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0x69, 0x9a, 0xa6, 0x59, 0x43, 0x9b, 0xd6, 0x94, 0x32, 0x84, 0x02, 0x21, 0x5c, 0x7a,
	0xaa, 0x10, 0x9c, 0xb9, 0x21, 0x10, 0xd7, 0xf2, 0x04, 0xb3, 0xd9, 0x69, 0xd6, 0xa9, 0xed, 0x5d,
	0xd9, 0xde, 0x84, 0xe5, 0x61, 0x78, 0x56, 0x34, 0x9e, 0x6d, 0x2a, 0xf5, 0x36, 0xdf, 0xef, 0x7f,
	0x7e, 0x8f, 0x2c, 0x8f, 0x9a, 0xdd, 0x61, 0x70, 0x31, 0x61, 0x8a, 0x37, 0x6d, 0x68, 0x52, 0xa3,
	0x8b, 0xbd, 0xb0, 0x04, 0x35, 0xf9, 0x81, 0xc1, 0xfd, 0xfa, 0xae, 0x4f, 0xd5, 0xc8, 0x54, 0x70,
	0xb0, 0x38, 0xb8, 0x2e, 0x6e, 0x47, 0xa6, 0x5a, 0xfe, 0x9b, 0xa8, 0x31, 0x1f, 0x3d, 0x3d, 0xd0,
	0xa0, 0x8e, 0xb1, 0x34, 0x6b, 0x34, 0x16, 0x46, 0x8b, 0x83, 0xeb, 0x93, 0xdb, 0x07, 0xd4, 0x5a,
	0x8d, 0xd1, 0xd2, 0x1f, 0x38, 0xcc, 0x72, 0xae, 0xf5, 0x5c, 0x4d, 0x57, 0x18, 0x1a, 0x6b, 0x3c,
	0xc1, 0x38, 0xeb, 0x7b, 0xd6, 0x17, 0xea, 0x68, 0x65, 0x8d, 0x4f, 0x70, 0x94, 0x0f, 0x04, 0xf4,
	0x95, 0x2a, 0x2a, 0x72, 0x94, 0x82, 0xe9, 0x22, 0x4c, 0xf2, 0xc9, 0xa3, 0xc0, 0x3d, 0xd5, 0x0e,
	0xc3, 0x1d, 0x1c, 0x4b, 0x4f, 0x06, 0x9e, 0x89, 0xac, 0x35, 0x4d, 0x4a, 0x30, 0x95, 0x99, 0x06,
	0x64, 0x3f, 0x39, 0x63, 0x7b, 0x28, 0xc4, 0x9f, 0x41, 0x5f, 0xaa, 0x09, 0x6d, 0xc9, 0xf6, 0x1e,
	0x54, 0x96, 0x07, 0x62, 0x7d, 0x4d, 0x4d, 0x58, 0x13, 0x3c, 0x17, 0x5d, 0x48, 0x9f, 0xa9, 0xc3,
	0x75, 0x17, 0xe1, 0x45, 0x16, 0xb9, 0xe4, 0xdc, 0x1a, 0x2d, 0xf5, 0x70, 0x22, 0xb9, 0x19, 0xb8,
	0xbf, 0xc6, 0xb0, 0xa5, 0x1e, 0x4e, 0xa5, 0x5f, 0x88, 0x5f, 0xa1, 0x26, 0xbf, 0xaa, 0x1d, 0x7a,
	0x98, 0xc9, 0x2b, 0x3c, 0x30, 0x67, 0x6f, 0x30, 0xc2, 0x99, 0x64, 0x6f, 0x30, 0xf2, 0x3b, 0x6e,
	0x9a, 0xca, 0xc0, 0xb9, 0xbc, 0x23, 0xd7, 0xac, 0xdd, 0x93, 0x4f, 0xa0, 0x45, 0xe3, 0x9a, 0x6f,
	0xbb, 0x0f, 0x4d, 0xd9, 0x45, 0x78, 0x29, 0xb7, 0x09, 0xb1, 0xd7, 0x12, 0xd6, 0x70, 0x21, 0x5e,
	0xae, 0x79, 0x5e, 0x4b, 0x3b, 0x13, 0xe1, 0x95, 0xcc, 0x9b, 0x21, 0xab, 0xc6, 0x77, 0x11, 0x2e,
	0x07, 0x95, 0x81, 0x73, 0x1d, 0x06, 0x6f, 0x08, 0x5e, 0x4b, 0xae, 0x10, 0xe7, 0x3a, 0x0c, 0x1d,
	0x80, 0xe4, 0x72, 0xcd, 0xd3, 0xb7, 0xe8, 0xe0, 0x8d, 0x4c, 0xdf, 0xa2, 0xe3, 0xcc, 0x96, 0xbc,
	0xef, 0x61, 0x2e, 0x99, 0x19, 0x38, 0xb3, 0x35, 0x14, 0x02, 0xc1, 0x5b, 0xc9, 0x14, 0x62, 0x77,
	0x68, 0x4a, 0xe3, 0xe1, 0x4a, 0xdc, 0x19, 0x38, 0x35, 0xa2, 0x83, 0x77, 0x92, 0x1a, 0x25, 0x35,
	0xa2, 0xaf, 0x7a, 0x78, 0x2f, 0xbe, 0x0c, 0xfc, 0x57, 0x22, 0x95, 0x18, 0x93, 0x41, 0x0f, 0x1f,
	0xe4, 0xaf, 0xec, 0x85, 0xdc, 0x53, 0xa3, 0x27, 0x58, 0x0c, 0x3d, 0x0c, 0xfc, 0x57, 0xb6, 0xc6,
	0xaf, 0xf8, 0x31, 0x3f, 0xca, 0x5f, 0x19, 0x90, 0xfd, 0x3b, 0x63, 0x6d, 0x0f, 0x4b, 0xf1, 0x67,
	0xe0, 0xc9, 0x77, 0xe6, 0x2f, 0x86, 0x0a, 0x3e, 0xc9, 0xe4, 0x42, 0x5f, 0xbe, 0xa9, 0x82, 0xf7,
	0xe3, 0x37, 0xef, 0x91, 0xfe, 0xac, 0xa6, 0x3f, 0x29, 0x49, 0x7d, 0x7e, 0xf3, 0xb8, 0x70, 0xb2,
	0x5c, 0xf3, 0xd9, 0x13, 0x69, 0xf9, 0xac, 0x9c, 0xe4, 0x5d, 0xfc, 0xfa, 0x3f, 0x00, 0x00, 0xff,
	0xff, 0x1b, 0x98, 0x31, 0xc8, 0x9e, 0x03, 0x00, 0x00,
}
